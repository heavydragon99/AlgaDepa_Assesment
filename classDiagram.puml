@startuml

class fileHandler {
}

class fileReader {
}

class fileParser {
}

class artistParserStrategy <<interface>>{

}

class paintingParserStrategy <<interface>>{

}


class artistCSVParser{ 
}

class paintingXMLParser {
}

class paintingTXTParser {
}

class onlineReader {

}

class localReader {
}

class concreteXMLReader {
}

class concreteTXTReader {
}

class concreteCSVReader {
}

class controller{

}

class model{
    void updatemodel();
}

class levelData{
    void updateLevelData();
}

class painting{
    void updatePainting();
}

class visitor{
    void updateVisitor();
}

class painter{
    void updatePainter();
}

class inputHandler{
}

class mouse{
    ' use 3rd party library to get mouse coordinates and translate to generic data
}

class keyboard{
    ' use 3rd party library to get keyboard input and translate to generic data
}

class xboxController{
    ' use 3rd party library to get xbox controller input and translate to generic data
}

class builder{}

class paintingFactory{}

class view{}

struct parsedArtist{
    float x;
    float y;
    float vx;
    float vy;
}

' vector<char> parsedPainting()

struct parsedGrid{
    int rows;
    int cols;
    parsedGridColor[] colors;

}

struct parsedGridColor{
    char letter;
    int red;
    int green;
    int blue;
    int weight;
}


controller <-- fileHandler
controller <-- model
controller <-- inputHandler
controller <-- view
view <-- model

' model
model <-- levelData
levelData <-- painting
levelData <-- visitor
levelData <-- painter

levelData <-- builder

builder <-- paintingFactory


' filehandler
fileHandler <-- fileReader

' Reader
fileReader <-- onlineReader
fileReader <-- localReader


onlineReader <-- fileTypeReaderStrategy
localReader <-- fileTypeReaderStrategy

fileTypeReaderStrategy <|.. concreteXMLReader
fileTypeReaderStrategy <|.. concreteTXTReader
fileTypeReaderStrategy <|.. concreteCSVReader

' Parser
fileHandler <-- fileParser
fileParser <-- artistParserStrategy
fileParser <-- paintingParserStrategy

artistParserStrategy <|.. artistCSVParser
paintingParserStrategy <|.. paintingTXTParser
paintingParserStrategy <|.. paintingXMLParser


' inputHandler
inputHandler <-- mouse
inputHandler <-- keyboard
inputHandler <-- xboxController
@enduml